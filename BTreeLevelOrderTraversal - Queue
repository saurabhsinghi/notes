/*
Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).
For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its level order traversal as:
[
  [3],
  [9,20],
  [15,7]
]
*/

class BinaryTreeTraversal{
class Node{
  int data;
  Node left;
  Node right;
}
public static void main(String args[]){
  printTreeLevelOrder(rootNode);
}

private void printTreeLevelOrder(Node rootNode){
  if(rootNode==null)
   return;
 
  Queue<Node> queue = new LinkedList<Node>();
  queue.add(rootNode);
   
  while(!queue.isEmpty()){
   Node obj = (Node)queue.poll();
    
   System.out.print(obj.getData() + " ");
    
   if(obj.getLeft()!=null)
    queue.add(obj.getLeft());
     
   if(obj.getRight()!=null)
    queue.add(obj.getRight());
  }
 }
