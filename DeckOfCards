public enum Suit{
 CLUB(1), DIAMOND(2), HEART(3), SPADE(4);
 private int value;
 Suit(int val){
  value = val;
 }
}

class Card {
  Suit suit;
  int rank;
  Card(Suit s, int r){
    this.suit = s;
    this.rank = r;
  }
  private boolean available = true;
  public boolean isAvailable(){
    return available;
  }
  public void setAvailable(boolean val){available = val;}
}

class Deck {
 ArrayList<Card> cards;
 int dealtIndex = 0;
 public void shuffle(){
   for(int i = 0; i<cards.size();i++){
      int randomIndex = (int)(Math.random() * cards.size());
      Collections.swap(cards, i, randomIndex);
   }
 }
 public void setDeckOfCards(ArrayList<Card> cards){
   this.cards = cards;
 }
   public int remainingCards() {
		return cards.size() - dealtIndex;
	}

   public Card[] dealHand(int number) {
		if (remainingCards() < number) {
			return null;
		}
		
		Card[] hand = (Card[]) new Card[number];
		int count = 0;
		while (count < number) {
			Card card = dealCard();
			if (card != null) {
				hand[count] = card;
				count++;
			}
		}
		
		return hand;
	}
	
	public Card dealCard() {
		if (remainingCards() == 0) {
			return null;
		}
		
		Card card = cards.get(dealtIndex);
		card.setAvailable(false);
		dealtIndex++;
		return card;		
	}
}

public class Hand{
 protected ArrayList<Card> cards = new ArrayList<T>();
 public int score() {
  int score = 0;
  for (Card card : cards) {
    score += card.value();
  }
  return score;
 }
 public void addCard(T card){
   cards.add(card);
 }
}

public class PokerHand extends Hand{
   
  public PokerHand(ArrayList<T> cards){
    this.cards = cards;
  }
     
}

public class PokerStarter{
 public void initializeDeck() {
                private Deck<Card> deck;
		ArrayList<Card> cards = new ArrayList<Card>();
		for (int i = 1; i <= 13; i++) {
			for (Suits s : Suits.values()) {;
				Card card = new Card(s,i);
				cards.add(card);
			}
		}
		
		deck = new Deck<BlackJackCard>();
		deck.setDeckOfCards(cards);
		deck.shuffle();	
	}

public void dealInitial() {
                        for(int i = i<7;i++){
			   Card card = deck.dealCard();
                           hand.add(card);
		  }
	}
}
